1. Cos'è ReactJS? 
ReactJS è una LIBRERIA frontend per la creazione di interfacce dinamiche, sviluppata da Meta e resa open source nel 2013. La sua caratteristica principale è quella di consentire la costruzione di pagine web senza la manipolazione diretta del DOM, quindi in modo più dinamico.

2. ReactJS è un FRAMEWORK, non una LIBRERIA.
FALSO. E' una libreria.

3. Il file package.js contiene...
Molte informazioni utili, come ad esempio l'elenco di tutte le dipendenze richieste dall'applicazione. 
Ma contiene anche il nome dell'applicazione, le versioni, gli scripts.

4. create-react-app è l'unico modo possibile per creare un'applicazione React.
FALSO. 

5. Qual è il comando da lanciare nel terminale per creare una nuova create-react-app con nome "test"?
npx create-react-app test

6. Cos'è un componente React?
Un blocco di logica/contenuto riutilizzabile all’interno dell’applicazione.

7. Un componente React può venire creato in tre modi: funzione, classe o interfaccia. 
FALSO. Può essere creato come funzione o classe. 

8. Le props sono frammenti di informazione assegnati all’invocazione di un componente React, utili al fine di rendere il componente dinamico e più riutilizzabile.
VERO.

9. Le props possono essere passate solamente da un componente genitore ad un componente figlio, non è possibile fare il contrario.
VERO.

10. Da dove possono venire recuperate le props all’interno di un componente React creato come classe?
Possono essere recuperate all’interno dello oggetto ‘this’, dentro un sotto-oggetto chiamato ‘props’.


